{"ast":null,"code":"var _jsxFileName = \"/home/piyush/coronatracker/src/components/Chart/Chart.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api';\nimport { Line, Bar } from 'react-chartjs-2';\nimport styles from './Chart.module.css';\n\nconst Chart = ({\n  data: {\n    confirmed,\n    recovered,\n    deaths\n  },\n  country\n}) => {\n  const [dailyData, setDailyData] = useState([]);\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData(await fetchDailyData());\n    };\n\n    fetchAPI();\n  }, []);\n  const lineChart = dailyData.length ? /*#__PURE__*/React.createElement(Line, {\n    data: {\n      labels: dailyData.map(({\n        date\n      }) => date),\n      datasets: [{\n        data: dailyData.map(({\n          confirmed\n        }) => confirmed),\n        label: 'Infected',\n        borderColor: '#3333ff',\n        fill: true\n      }, {\n        data: dailyData.map(({\n          deaths\n        }) => deaths),\n        label: 'Deaths',\n        borderColor: 'red',\n        backgroundColor: 'rgba(255,0,0,0.5)',\n        fill: true\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }) : null;\n  const barChart = confirmed ? /*#__PURE__*/React.createElement(Bar, {\n    data: {\n      labels: ['Infected', 'Recovered', 'Deaths'],\n      datasets: [{\n        label: 'people',\n        backgroundColor: ['rgba(0,0,255, 0.5 )', 'rgba(0,255 ,0 , 0.5 )', 'rgba(255,0,0, 0.5 )'],\n        data: [confirmed.value, recovered.value, deaths.value]\n      }]\n    },\n    options: {\n      legend: {\n        display: false\n      },\n      tittle: {\n        display: true,\n        text: `Current state in ${country}`\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }) : null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, country ? barChart : lineChart);\n};\n\nexport default Chart;","map":{"version":3,"sources":["/home/piyush/coronatracker/src/components/Chart/Chart.jsx"],"names":["React","useState","useEffect","fetchDailyData","Line","Bar","styles","Chart","data","confirmed","recovered","deaths","country","dailyData","setDailyData","fetchAPI","lineChart","length","labels","map","date","datasets","label","borderColor","fill","backgroundColor","barChart","value","legend","display","tittle","text","container"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,cAAR,QAA6B,WAA7B;AACA,SAAQC,IAAR,EAAcC,GAAd,QAAwB,iBAAxB;AAEA,OAAOC,MAAP,MAAmB,oBAAnB;;AAEA,MAAMC,KAAK,GAAG,CAAE;AAACC,EAAAA,IAAI,EAAE;AAACC,IAAAA,SAAD;AAAWC,IAAAA,SAAX;AAAsBC,IAAAA;AAAtB,GAAP;AAAsCC,EAAAA;AAAtC,CAAF,KAAsD;AAClE,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,EAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAK;AACb,UAAMa,QAAQ,GAAG,YAAW;AAC1BD,MAAAA,YAAY,CAAC,MAAMX,cAAc,EAArB,CAAZ;AACD,KAFD;;AAIAY,IAAAA,QAAQ;AAET,GAPQ,EAON,EAPM,CAAT;AASF,QAAMC,SAAS,GACXH,SAAS,CAACI,MAAV,gBAEA,oBAAC,IAAD;AACE,IAAA,IAAI,EAAE;AACNC,MAAAA,MAAM,EAAEL,SAAS,CAACM,GAAV,CAAc,CAAC;AAACC,QAAAA;AAAD,OAAD,KAAYA,IAA1B,CADF;AAENC,MAAAA,QAAQ,EAAE,CAAE;AACVb,QAAAA,IAAI,EAAEK,SAAS,CAACM,GAAV,CAAc,CAAC;AAACV,UAAAA;AAAD,SAAD,KAAiBA,SAA/B,CADI;AAEVa,QAAAA,KAAK,EAAE,UAFG;AAGVC,QAAAA,WAAW,EAAE,SAHH;AAIVC,QAAAA,IAAI,EAAC;AAJK,OAAF,EAMP;AACDhB,QAAAA,IAAI,EAAEK,SAAS,CAACM,GAAV,CAAc,CAAC;AAACR,UAAAA;AAAD,SAAD,KAAcA,MAA5B,CADL;AAEDW,QAAAA,KAAK,EAAE,QAFN;AAGDC,QAAAA,WAAW,EAAE,KAHZ;AAIDE,QAAAA,eAAe,EAAC,mBAJf;AAKDD,QAAAA,IAAI,EAAC;AALJ,OANO;AAFJ,KADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,GAmBM,IApBV;AAyBE,QAAME,QAAQ,GACZjB,SAAS,gBAEP,oBAAC,GAAD;AACE,IAAA,IAAI,EAAE;AACJS,MAAAA,MAAM,EAAE,CAAC,UAAD,EAAa,WAAb,EAA0B,QAA1B,CADJ;AAEJG,MAAAA,QAAQ,EAAC,CAAC;AACRC,QAAAA,KAAK,EAAC,QADE;AAERG,QAAAA,eAAe,EAAC,CAAC,qBAAD,EAAwB,uBAAxB,EAAiD,qBAAjD,CAFR;AAGRjB,QAAAA,IAAI,EAAC,CAACC,SAAS,CAACkB,KAAX,EAAkBjB,SAAS,CAACiB,KAA5B,EAAmChB,MAAM,CAACgB,KAA1C;AAHG,OAAD;AAFL,KADR;AAUE,IAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAC;AAACC,QAAAA,OAAO,EAAC;AAAT,OADA;AAEPC,MAAAA,MAAM,EAAC;AAACD,QAAAA,OAAO,EAAE,IAAV;AAAgBE,QAAAA,IAAI,EAAG,oBAAmBnB,OAAQ;AAAlD;AAFA,KAVX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFO,GAiBR,IAlBH;AAsBA,sBACE;AAAK,IAAA,SAAS,EAAEN,MAAM,CAAC0B,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGpB,OAAO,GAAEc,QAAF,GAAaV,SADvB,CADF;AAKD,CAhED;;AAkEA,eAAeT,KAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {fetchDailyData} from '../../api';\nimport {Line, Bar} from 'react-chartjs-2';\n\nimport styles from './Chart.module.css';\n\nconst Chart = ( {data: {confirmed,recovered, deaths}, country} ) => {\n  const [dailyData, setDailyData] = useState([]);\n\n  useEffect(() =>{\n    const fetchAPI = async() => {\n      setDailyData(await fetchDailyData());\n    }\n\n    fetchAPI();\n\n  }, [] );\n\nconst lineChart = (\n    dailyData.length\n    ?(\n    <Line\n      data={{\n      labels: dailyData.map(({date}) => date),\n      datasets: [ {\n        data: dailyData.map(({confirmed}) => confirmed),\n        label: 'Infected',\n        borderColor: '#3333ff',\n        fill:true,\n        \n      }, {\n        data: dailyData.map(({deaths}) => deaths),\n        label: 'Deaths',\n        borderColor: 'red',\n        backgroundColor:'rgba(255,0,0,0.5)',\n        fill:true,\n      }],\n      }}\n    />) : null\n\n  );\n\n\n  const barChart = (\n    confirmed\n    ?(\n      <Bar\n        data={{\n          labels: ['Infected', 'Recovered', 'Deaths'],\n          datasets:[{\n            label:'people',\n            backgroundColor:['rgba(0,0,255, 0.5 )', 'rgba(0,255 ,0 , 0.5 )', 'rgba(255,0,0, 0.5 )'],\n            data:[confirmed.value, recovered.value, deaths.value]\n          }]\n        }}\n\n        options={{\n          legend:{display:false},\n          tittle:{display: true, text: `Current state in ${country}`},\n        }}\n      />\n  ): null\n  );\n\n\n  return(\n    <div className={styles.container}>\n      {country? barChart : lineChart}\n    </div>\n  )\n}\n\nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}